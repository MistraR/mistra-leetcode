package com.mistra.leetcode.array;

/**
 * @author wrmistra@gmail.com
 * @date 2023/4/22
 * @ Description:
 *
 * 两个整数之间的 汉明距离 指的是这两个数字对应二进制位不同的位置的数目。
 *
 * 给你两个整数 x 和 y，计算并返回它们之间的汉明距离。
 *
 * 示例 1：
 *
 * 输入：x = 1, y = 4
 * 输出：2
 * 解释：
 * 1   (0 0 0 1)
 * 4   (0 1 0 0)
 * ↑   ↑
 * 上面的箭头指出了对应二进制位不同的位置
 *
 * 位与（&）：二元运算符，两个为1时结果为1，否则为0
 * 位或（|）：二元运算符，两个其中有一个为1时结果就为1，否则为0
 * 位异或（^）：二元运算符，两个数同时为1或0时结果为1，否则为0
 * 位取非（~）：一元运算符，取反操作
 * 左移（<<）：一元运算符，按位左移一定的位置。高位溢出，低位补符号位，符号位不变。
 * 右移（>>）：一元运算符，按位右移一定的位置。高位补符号位，符号位不变，低位溢出。
 * 无符号右移（>>>）：一元运算符，符号位（即最高位）保留，其它位置向右移动，高位补零，低位溢出
 */
public class E461 {

    public int hammingDistance(int x, int y) {
        return Integer.bitCount(x ^ y);
    }
}
